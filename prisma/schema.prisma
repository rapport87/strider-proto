generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model user {
  id            Int             @id @default(autoincrement())
  email         String?         @unique @db.VarChar(100)
  password      String          @db.VarChar(100)
  user_name     String          @db.VarChar(32)
  phone         String?         @db.VarChar(11)
  created_at    DateTime        @default(now())
  updated_at    DateTime        @updatedAt
  user_category user_category[]
  userLedger    user_ledger[]
}

model user_ledger {
  user_id    Int
  ledger_id  Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user       user     @relation(fields: [user_id], references: [id])
  ledger     ledger   @relation(fields: [ledger_id], references: [id])

  @@id([user_id, ledger_id])
}

model ledger {
  id              Int               @id @default(autoincrement())
  ledger_name     String            @db.VarChar(32)
  created_at      DateTime          @default(now())
  updated_at      DateTime          @updatedAt
  ledger_category ledger_category[]
  userLedger      user_ledger[]
  ledger_detail   ledger_detail[]
}

model ledger_detail {
  id         Int      @id @default(autoincrement())
  ledger_id  Int
  title      String   @db.VarChar(100)
  detail     String?  @db.VarChar(4000)
  price      Int
  photo      String?  @db.VarChar(200)
  evented_at DateTime @default(now())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  ledger     ledger   @relation(fields: [ledger_id], references: [id])
}

model category {
  id            Int      @id @default(autoincrement())
  category_name String   @db.VarChar(32)
  category_code Int
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
}

model user_category {
  id              Int               @id @default(autoincrement())
  user_id         Int
  category_name   String            @db.VarChar(32)
  category_code   Int
  created_at      DateTime          @default(now())
  updated_at      DateTime          @updatedAt
  user            user              @relation(fields: [user_id], references: [id])
  ledger_category ledger_category[]
}

model ledger_category {
  ledger_id        Int
  user_category_id Int
  created_at       DateTime       @default(now())
  updated_at       DateTime       @updatedAt
  ledger           ledger         @relation(fields: [ledger_id], references: [id])
  user_category    user_category? @relation(fields: [user_category_id], references: [id])
  categoryId       Int?

  @@id([ledger_id])
}
